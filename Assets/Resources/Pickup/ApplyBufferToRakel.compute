#include "../ShaderBase/shader_base.hlsl"

#include "../Paint/paint.hlsl"
#include "../math.hlsl"
#include "../paint_grid.hlsl"

RWStructuredBuffer<ColumnInfo> CanvasEmittedPaintInfo;
RWStructuredBuffer<Paint> CanvasEmittedPaintContent;
int3 CanvasEmittedPaintSize;

RWStructuredBuffer<ColumnInfo> RakelReservoirInfo;
RWStructuredBuffer<Paint> RakelReservoirContent;
int3 RakelReservoirSize;
float RakelReservoirCellVolume;
int RakelReservoirDiffuseDepth;
float RakelReservoirDiffuseRatio;


#pragma kernel main

[numthreads(32,1,1)]
void main (int3 id_ : SV_DispatchThreadID)
{
    id__ = id_;
    if (is_relevant_thread(id(), CalculationSize))
    {
        // calculate pixel position on canvas
        int2 rakel_pixel = id() + CalculationPosition;

        paint_grid_reverse_transfer(
            CanvasEmittedPaintInfo, CanvasEmittedPaintContent, CanvasEmittedPaintSize, id().xy,
            RakelReservoirInfo, RakelReservoirContent, RakelReservoirSize, rakel_pixel,
            RakelReservoirCellVolume, RakelReservoirDiffuseDepth, RakelReservoirDiffuseRatio);
    }
}