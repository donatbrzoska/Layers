#include "../ShaderBase/shader_base.hlsl"

#include "../Paint/paint.hlsl"
#include "../math.hlsl"
#include "../paint_grid.hlsl"

RWStructuredBuffer<ColumnInfo> RakelEmittedPaintInfo;
RWStructuredBuffer<Paint> RakelEmittedPaintContent;
uint3 RakelEmittedPaintSize;

RWStructuredBuffer<ColumnInfo> CanvasReservoirInfo;
RWStructuredBuffer<Paint> CanvasReservoirContent;
uint3 CanvasReservoirSize;


#pragma kernel main

[numthreads(32,1,1)]
void main (uint3 id_ : SV_DispatchThreadID)
{
    id__ = id_;
    if (is_relevant_thread(id(), CalculationSize))
    {
        // calculate pixel position on canvas
        int2 canvas_pixel = id() + CalculationPosition;

        paint_grid_reverse_transfer(
            RakelEmittedPaintInfo, RakelEmittedPaintContent, RakelEmittedPaintSize, id().xy,
            CanvasReservoirInfo, CanvasReservoirContent, CanvasReservoirSize, canvas_pixel);
    }
}