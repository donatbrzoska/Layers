#include "../ShaderBase/shader_base.hlsl"

#include "../Paint/paint.hlsl"
#include "../rakel.hlsl"
#include "../paint_grid.hlsl"

RWStructuredBuffer<float> ReducedVolumeSource;

float LayerThickness_MAX;

RWStructuredBuffer<Rakel> RakelInfo;


#pragma kernel main

[numthreads(32,1,1)]
void main (uint3 id_ : SV_DispatchThreadID)
{
    id__ = id_;
    if (is_relevant_thread(id(), CalculationSize))
    {
        Rakel rakel = RakelInfo[0];

        float current_reduced_volume_on_canvas = ReducedVolumeSource[0];
        rakel.position_base_z = - (current_reduced_volume_on_canvas * VOLUME_THICKNESS() + LayerThickness_MAX);
        
        RakelInfo[0] = rakel;
    }
}